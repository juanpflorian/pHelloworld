// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace pHelloworld.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250331070155_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Opinion", b =>
                {
                    b.Property<int>("IdOpinion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdOpinion"));

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdGuia")
                        .HasColumnType("int");

                    b.Property<int>("IdTurista")
                        .HasColumnType("int");

                    b.HasKey("IdOpinion");

                    b.HasIndex("IdGuia");

                    b.HasIndex("IdTurista");

                    b.ToTable("Opiniones");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Disponibilidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Experiencia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Idiomas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("TarifaHora")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("TarifaTour")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo_Usuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("foto_perfil")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_usuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("pHelloworld.Models.Mensaje", b =>
                {
                    b.Property<int>("IdMensaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMensaje"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdEmisor")
                        .HasColumnType("int");

                    b.Property<int>("IdReceptor")
                        .HasColumnType("int");

                    b.Property<string>("ImagenRuta")
                        .HasColumnType("longtext");

                    b.Property<bool>("Leido")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdMensaje");

                    b.HasIndex("IdEmisor");

                    b.HasIndex("IdReceptor");

                    b.ToTable("Mensaje");
                });

            modelBuilder.Entity("pHelloworld.Models.Notificacion", b =>
                {
                    b.Property<int>("IdNotificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdNotificacion"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IdMensaje")
                        .HasColumnType("int");

                    b.Property<int?>("IdPlan")
                        .HasColumnType("int");

                    b.Property<int?>("IdReserva")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<bool>("Leido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdNotificacion");

                    b.HasIndex("IdMensaje");

                    b.HasIndex("IdPlan");

                    b.HasIndex("IdReserva");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Notificacion");
                });

            modelBuilder.Entity("pHelloworld.Models.Plan", b =>
                {
                    b.Property<int>("IdPlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_plan");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPlan"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descripcion");

                    b.Property<string>("Duracion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("duracion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_creacion");

                    b.Property<int?>("IdGuia")
                        .HasColumnType("int")
                        .HasColumnName("id_guia");

                    b.Property<string>("NombrePlan")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nombre_plan");

                    b.Property<string>("NumeroPersonas")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("numero_personas");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("precio");

                    b.HasKey("IdPlan");

                    b.HasIndex("IdGuia");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("pHelloworld.Models.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_reserva");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdReserva"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext")
                        .HasColumnName("descripcion");

                    b.Property<string>("Duracion")
                        .HasColumnType("longtext")
                        .HasColumnName("duracion");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaProgramada")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_programada");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_reserva");

                    b.Property<int>("IdGuia")
                        .HasColumnType("int")
                        .HasColumnName("id_guia");

                    b.Property<int>("IdPlan")
                        .HasColumnType("int")
                        .HasColumnName("id_plan");

                    b.Property<int>("IdTurista")
                        .HasColumnType("int")
                        .HasColumnName("id_turista");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("precio");

                    b.HasKey("IdReserva");

                    b.HasIndex("IdGuia");

                    b.HasIndex("IdPlan");

                    b.HasIndex("IdTurista");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Opinion", b =>
                {
                    b.HasOne("Usuario", "Guia")
                        .WithMany("OpinionesRecibidas")
                        .HasForeignKey("IdGuia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Usuario", "Turista")
                        .WithMany()
                        .HasForeignKey("IdTurista")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Guia");

                    b.Navigation("Turista");
                });

            modelBuilder.Entity("pHelloworld.Models.Mensaje", b =>
                {
                    b.HasOne("Usuario", "Emisor")
                        .WithMany()
                        .HasForeignKey("IdEmisor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Usuario", "Receptor")
                        .WithMany()
                        .HasForeignKey("IdReceptor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Emisor");

                    b.Navigation("Receptor");
                });

            modelBuilder.Entity("pHelloworld.Models.Notificacion", b =>
                {
                    b.HasOne("pHelloworld.Models.Mensaje", "MensajeRelacionado")
                        .WithMany()
                        .HasForeignKey("IdMensaje")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("pHelloworld.Models.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("IdPlan")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("pHelloworld.Models.Reserva", "Reserva")
                        .WithMany()
                        .HasForeignKey("IdReserva")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MensajeRelacionado");

                    b.Navigation("Plan");

                    b.Navigation("Reserva");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("pHelloworld.Models.Plan", b =>
                {
                    b.HasOne("Usuario", "Guia")
                        .WithMany()
                        .HasForeignKey("IdGuia")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Guia");
                });

            modelBuilder.Entity("pHelloworld.Models.Reserva", b =>
                {
                    b.HasOne("Usuario", "Guia")
                        .WithMany()
                        .HasForeignKey("IdGuia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("pHelloworld.Models.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("IdPlan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Usuario", "Turista")
                        .WithMany()
                        .HasForeignKey("IdTurista")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Guia");

                    b.Navigation("Plan");

                    b.Navigation("Turista");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Navigation("OpinionesRecibidas");
                });
#pragma warning restore 612, 618
        }
    }
}
